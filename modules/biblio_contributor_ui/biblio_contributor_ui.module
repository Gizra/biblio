<?php

/**
 * @file
 * Main file for the Biblio contributor UI module.
 */

/**
 * Implements hook_menu().
 */
function biblio_contributor_ui_menu() {
  $items = array();

  $items['admin/contributor'] = array(
    'title' => 'Biblio contributor',
    'access arguments' => array('manage biblio contributor'),
    'page callback' => array('views_embed_view'),
    'page arguments' => array('biblio_contributor'),
  );

  $items['admin/contributor/add'] = array(
    'title' => 'Add biblio contributor',
    'access arguments' => array('create biblio contributor entry'),
    'page callback' => array('drupal_get_form'),
    'page arguments' => array('biblio_contributor_ui_entity_form'),
    'type' => MENU_LOCAL_ACTION,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function biblio_contributor_ui_permission() {
  return array(
    'manage biblio contributor' => array(
      'title' => t('Manage biblio contributor'),
      'description' => t('Grant to the user the permission to manage biblio contributor entries via the UI.'),
    ),
    'create biblio contributor entry' => array(
      'title' => t('Create biblio contributor entry'),
      'description' => t('Grant to the user the permission to create a biblio contributor via the UI'),
    ),
    'update biblio contributor entry' => array(
      'title' => t('Update biblio contributor entry'),
      'description' => t('Grant to the user the permission to update a biblio contributor via the UI'),
    ),
    'delete biblio contributor entry' => array(
      'title' => t('Delete biblio contributor entry'),
      'description' => t('Grant to the user the permission to delete a biblio contributor via the UI'),
    ),
    'view biblio contributor entry' => array(
      'title' => t('View biblio contributor entry'),
      'description' => t('Grant to the user the permission to view a biblio contributor via the UI'),
    ),
  );
}

/**
 * Implements hook_entity_info_alter().
 */
function biblio_contributor_entity_info_alter(&$items) {
}

/**
 * Implements hook_theme().
 */
function biblio_contributor_ui_theme() {
  return array(
    'biblio_contributor_ui_form' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}

/**
 * Manage biblio contributor UI.
 */
function biblio_contributor_ui_entity_form($form, $form_state, BiblioContributor $contributor = NULL) {
  global $user;

  $account = user_load($user->uid);

  if (!$contributor) {
    $contributor = biblio_contributor_create();
  }

  $form['prefix'] = array(
    '#type' => 'textfield',
    '#title' => t('Prefix'),
  );

  $form['first_name'] = array(
    '#type' => 'textfield',
    '#title' => t('First name'),
  );

  $form['initials'] = array(
    '#type' => 'textfield',
    '#title' => t('Initials'),
  );

  $form['last_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Last name'),
  );

  $form['suffix'] = array(
    '#type' => 'textfield',
    '#title' => t('Suffix'),
  );

  $form['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Full name'),
  );

  $form['additional_settings'] = array(
    '#type' => 'vertical_tabs',
    '#weight' => 99,
  );

  $form['owner'] = array(
    '#type' => 'fieldset',
    '#title' => t('Authoring information'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#group' => 'additional_settings',
    '#attributes' => array(
      'class' => array('biblio-form-owner'),
    ),
    '#attached' => array(
      'js' => array(
        drupal_get_path('module', 'biblio_contributor_ui') . '/js/biblio_contributor_ui',
        array(
          'type' => 'setting',
          'data' => array('anonymous' => variable_get('anonymous', t('Anonymous'))),
        ),
      ),
    ),
    '#weight' => 90,
  );

  $form['owner']['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Created by'),
    '#maxlength' => 60,
    '#autocomplete_path' => 'user/autocomplete',
    '#default_value' => !empty($contributor->uid) ? user_load($contributor->uid)->name : $account->name,
    '#weight' => -1,
    '#description' => t('Leave blank for %anonymous.', array('%anonymous' => variable_get('anonymous', t('Anonymous')))),
  );

  $form['actions'] = array(
    '#type' => 'actions',
    'submit' => array(
      '#type' => 'submit',
      '#value' => t('Send'),
    ),
    'cancel' => array(
      '#markup' => l(t('Cancel'), 'biblio'),
    ),
  );

  return $form;
}
