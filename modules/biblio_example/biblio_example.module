<?php

/**
 * Implements hook_init().
 */
function biblio_example_init() {
  if (!class_exists('BiblioStyleCiteProc')) {
    drupal_set_message('Clear caches for the Biblio Plugins to be registered.');
    return;
  }

  biblio_example_attach_fields();
  biblio_example_create_content();
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function biblio_example_ctools_plugin_directory($module, $plugin) {
  if ($module == 'biblio') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Attach fields for the biblio book bundle.
 */
function biblio_example_attach_fields() {
  $field_names = array(
    'biblio_abstract',
    // Contributors reference.
    'contributor_field_collection',
    // cache field.
    'biblio_cache',
    'biblio_image',
    'biblio_in_press',
    'biblio_issued',
    'biblio_pages',
    'biblio_summary_char',
  );

  foreach ($field_names as $field_name) {
    biblio_create_field($field_name, 'biblio', 'book');
  }

  $field_names = array(
    'contributor_given',
    'contributor_family',
  );

  foreach ($field_names as $field_name) {
    biblio_create_field($field_name, 'biblio_contributor', 'biblio_contributor');
    biblio_create_field($field_name, 'biblio_contributor', 'biblio_contributor');
  }

  biblio_create_field('biblio_contributor_role', 'field_collection_item', 'contributor_field_collection');
  biblio_create_field('biblio_contributor', 'field_collection_item', 'contributor_field_collection');
}

/**
 * Creating dummy content.
 */
function biblio_example_create_content() {
  $biblio = biblio_create('book');
  $wrapper = entity_metadata_wrapper('biblio', $biblio);

  // Populate all core fields on behalf of field.module
  module_load_include('inc', 'devel_generate', 'devel_generate');
  module_load_include('inc', 'devel_generate', 'devel_generate.fields');
  devel_generate_fields($biblio, 'biblio', 'book');

  $biblio->title = devel_create_greeking(rand(3, 8), TRUE);

  // Add contributor to collection.
  $name = array(
    'given' => devel_create_greeking(rand(1, 2), TRUE),
    'family' => devel_create_greeking(rand(1, 2), TRUE),
  );

  $biblio_contributor1 = biblio_contributor_create($name);
  $biblio_contributor1->save();

  $name = array(
    'given' => devel_create_greeking(rand(1, 2), TRUE),
    'family' => devel_create_greeking(rand(1, 2), TRUE),
  );

  $biblio_contributor2 = biblio_contributor_create($name);
  $biblio_contributor2->save();

  // Reset any possible contributors field collections added by devel generate.
  $wrapper->contributor_field_collection->set(NULL);

  // Create contributors field collections.
  $field_collection1 = entity_create('field_collection_item', array('field_name' => 'contributor_field_collection'));
  $field_collection1->setHostEntity('biblio', $biblio);
  $collection_wrapper = entity_metadata_wrapper('field_collection_item', $field_collection1);
  $collection_wrapper->biblio_contributor->set($biblio_contributor1);
  $collection_wrapper->save();

  $field_collection2 = entity_create('field_collection_item', array('field_name' => 'contributor_field_collection'));
  $field_collection2->setHostEntity('biblio', $biblio);
  $collection_wrapper = entity_metadata_wrapper('field_collection_item', $field_collection2);
  $collection_wrapper->biblio_contributor->set($biblio_contributor2);
  $collection_wrapper->save();

  $get_text = $biblio->getText('example_citeproc', array('style_name' => 'chicago-author-date'));

  $value = array(
    'value' => $get_text,
    'format' => 'full_html',
  );

  // Show the CiteProc on the screen.
  drupal_set_message($get_text);

  // Cache the output, to be used for example with Views.

  $wrapper->biblio_cache->set($value);

  // We need to trim some illegal chars.
  // @todo: need to be smarter about this.
  $trimmed = trim(strip_tags($get_text), ' â€œ');
  // Save the charcter we will later group the publications by.
  $wrapper->biblio_summary_char->set(substr($trimmed, 0, 1));
  $wrapper->save();
}

