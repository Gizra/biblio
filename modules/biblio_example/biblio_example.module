<?php

/**
 * Implements hook_init().
 */
function biblio_example_init() {
  if (!class_exists('BiblioStyleCiteProc')) {
    drupal_set_message('Clear caches for the Biblio Plugins to be registered.');
    return;
  }

  biblio_example_create_content();
}


/**
 * Implements hook_theme().
 */
function biblio_example_theme() {
  $theme['biblio_example_citeproc'] = array(
    'variables' => array(
      'id' => NULL,
      'image' => NULL,
      'citation' => NULL,
      'abstract' => NULL,
      'pdf_list' => NULL,
    ),
    'path' => drupal_get_path('module', 'biblio_example') . '/templates',
    'template' => 'biblio-example-citeproc',
  );

  return $theme;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function biblio_example_ctools_plugin_directory($module, $plugin) {
  if ($module == 'biblio') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Creating dummy content.
 */
function biblio_example_create_content() {
  $biblio = biblio_create('book');
  $wrapper = entity_metadata_wrapper('biblio', $biblio);

  // Populate all core fields on behalf of field.module
  module_load_include('inc', 'devel_generate', 'devel_generate');
  module_load_include('inc', 'devel_generate', 'devel_generate.fields');
  devel_generate_fields($biblio, 'biblio', 'book');

  $biblio->title = devel_create_greeking(rand(3, 8), TRUE);

  // Add contributor to collection.
  $values = array(
    'firstname' => devel_create_greeking(rand(1, 2), TRUE),
    'lastname' => devel_create_greeking(rand(1, 2), TRUE),
  );

  $biblio_contributor1 = biblio_contributor_create($values);
  $biblio_contributor1->save();

  $values = array(
    'firstname' => devel_create_greeking(rand(1, 2), TRUE),
    'lastname' => devel_create_greeking(rand(1, 2), TRUE),
  );

  $biblio_contributor2 = biblio_contributor_create($values);
  $biblio_contributor2->save();

  // Reset any possible contributors field collections added by devel generate.
  $wrapper->contributor_field_collection->set(NULL);

  // Create contributors field collections.
  $field_collection1 = entity_create('field_collection_item', array('field_name' => 'contributor_field_collection'));
  $field_collection1->setHostEntity('biblio', $biblio);
  $collection_wrapper = entity_metadata_wrapper('field_collection_item', $field_collection1);
  $collection_wrapper->biblio_contributor->set($biblio_contributor1);
  $collection_wrapper->save();

  $field_collection2 = entity_create('field_collection_item', array('field_name' => 'contributor_field_collection'));
  $field_collection2->setHostEntity('biblio', $biblio);
  $collection_wrapper = entity_metadata_wrapper('field_collection_item', $field_collection2);
  $collection_wrapper->biblio_contributor->set($biblio_contributor2);
  $collection_wrapper->save();

  // Getting the text will already save the Biblio entity.
  $get_text = $biblio->getText('example_citeproc', array('style_name' => 'chicago-author-date'));

  // Show the CiteProc on the screen.
  drupal_set_message($get_text);
}

