<?php
/**
 * @file
 * Main functionality file for the biblio UI module.
 */


/**
 * Implements hook_menu().
 */
function biblio_ui_menu() {
  $items = array();

  $items['admin/content/biblio'] = array(
    'title' => 'Biblio',
    'description' => 'Manage all the biblio content on your site.',
    'access arguments' => array('administer biblio'),
    'page callback' => 'biblio_ui_manage',
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/biblio'] = array(
    'title' => 'Biblio',
    'description' => 'Manage biblio',
    'access arguments' => array('administer biblio'),
  );

  $items['admin/biblio/add'] = array(
    'title' => 'Add biblio entries',
    'description' => 'Select a biblio type to create an entry for.',
    'access arguments' => array('create biblio'),
    'type' => MENU_LOCAL_ACTION,
  );

  $types = array(
    'book' => array(
      'title' => t('Book'),
    ),
  );

  foreach ($types as $type => $info) {
    $items['admin/biblio/add/' . $type] = array(
      'title' => $info['title'],
      'description' => 'Create biblio entries.',
      'access arguments' => array('create biblio'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('biblio_ui_manage_biblio', $type),
    );
  }

  return $items;
}

/**
 * Manage the biblio entries in you site.
 */
function biblio_ui_manage() {
  return 'a';
}

/**
 * Display a list of biblio types for creating an entry.
 */
function biblio_ui_add_biblio_types() {
  return l(t('Book'), 'admin/biblio/add/book');
}

/**
 * Form for creating a biblio entry.
 */
function biblio_ui_manage_biblio($form, &$form_state, $type) {

  if (!is_object($type)) {
    $biblio = biblio_create($type);
    $form_state['#entity'] = $biblio;
  }

  return $form;
}
