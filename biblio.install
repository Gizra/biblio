<?php
/**
 * @file
 * Install file for the biblio module.
 */

/**
 * Implements hook_install().
 */
function biblio_install() {
  if (!$vocabulary = taxonomy_vocabulary_machine_name_load('biblio_roles')) {
    $vocabulary = new stdClass();
    $vocabulary->name = 'Biblio roles';
    $vocabulary->machine_name = 'biblio_roles';
    taxonomy_vocabulary_save($vocabulary);
  }

  $term = new stdClass();
  $term->name = "Author";
  $term->vid = $vocabulary->vid;
  taxonomy_term_save($term);

  $term = new stdClass();
  $term->name = "Editor";
  $term->vid = $vocabulary->vid;
  taxonomy_term_save($term);
}

/**
 * Implements hook_schema().
 */
function biblio_schema() {
  $schema['biblio'] = array(
    'fields' => array(
      'bid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => '',
        'unsigned' => TRUE,
      ),
      'title' => array(
        'description' => 'The title of this Biblio, always treated as non-markup plain text.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'description' => 'The publication type of the biblio',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The Drupal user ID who created this biblio.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => '',
      ),
      'changed' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => '',
      ),
    ),
    'primary key' => array('bid'),
    'indexes' => array(
      'bid' => array('bid'),
    ),
  );

  $schema['biblio_contributor'] = array(
    'description' => 'Relational table linking authors to biblio entries',
    'fields' => array(
      'cid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => 'Biblio Contributor ID. Unique ID for the contributor entity type.',
      ),
      'type' => array(
        'description' => 'The bundle name of the contributor entity',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => '',
      ),
      'changed' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => '',
      ),
    ),
    'foreign keys' => array(
      'biblio' => array(
        'table' => 'biblio',
        'columns' => array('bid' => 'bid'),
      ),
    ),
    'primary key' => array(
      'cid',
    ),
  );

  $schema['biblio_collection'] = array(
    'description' => t('Relational table grouping biblio nodes into collections'),
    'fields' => array(
      'cid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
        'description' => t('Primary Key: The {biblio_collection_data}.cid of the collection')
      ),
      'vid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
        'description' => t('Primary Key: The {biblio}.vid of the node.'),
      ),
      'pid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
        'description' => t('The parent id of the collection')
      ),
      'bid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
        'description' => t('The {biblio}.bid of the node.'),
      ),
      ),
    'primary key' => array('cid', 'vid'),
    'indexes' => array(
      'pid' => array('pid'),
      'bid' => array('bid'),
    ),
  );
  $schema['biblio_collection_type'] = array(
    'description' => t('Descriptions of the collections.'),
    'fields' => array(
      'cid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
        'description' => t('Primary Key: The id of the collection')
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => t('The name of the collection'),
      ),
      'description' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => t('The description of the collection'),
      ),
      ),
    'primary key' => array('cid'),
    'indexes' => array(
        'name' => array('name'),
    ),
  );

  return $schema;
}
